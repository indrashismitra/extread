extends layout.pug

block content
  h1= title
  p Welcome to #{title}
  p Wouldn’t it be nice if every layer in a symbol could be modified without breaking the original or needing to nest another one inside of the master? Well, in Figma every layer in component instance can be modified. Every layer in a nested component can be modified. Every layer in a nested component inside of another component can be modified. And on and on and on. Colors. Fonts. Shadows. Effects. All of them can be overridden without screwing up the master. (Well, most. Rotation, x y coords, height & width can’t, but that makes sense.) I’ve tried to make this work in Sketch. I really have. The great tips that the guys over at UX Power Tools recommend like using symbols as masks, having colors be symbols, adding emoji to symbol layers and overrides… They’re all good workarounds. But we shouldn’t have to go to all of that trouble to make something as simple as a header. I tried the whole schtick, but I ended up with this: Look at the Overrides on the right. Yeesh. The problem with this method is the overrides panel. As soon as you nest that many times, you lose the ability to control the order and name of the layers within the nested symbols. As a result, things all start to look the same and you get like 40 overrides to choose from, mostly from states that have no relevancy to your symbol. It’s a real pain, and really hard to try to fix, tweak, or update. Maybe I was just doing it wrong, but I’ve yet to come across a better solution. How does this work in Figma? Here’s how I set up the same exact thing: Nesting flows from bottom to top, left to right. My default body style is black, but my action color is green. Instead of having to have Body / Main and Body / Action components, I just made one component, and then overrode the color on Left action. That override flows all the way up, but only the override that I’ve made for that instance. If I were to every change my body style to, say, all caps, each of these components would fall in line, but still keep their alignment & color. You can’t do this in Sketch. Not even close. ITS A MIRACLE. Try it, you’ll see what I mean. Reason #3: Team Library This one is big, and not just for teams. This has the potential to give us all access to the default styles and layouts as intended. If Google and Apple were to make their own component libraries and share those with the world, we’d all be speaking the same design language for the first time since the iPhone. Imagine not having to download another template file when iOS updates. Imagine having access to all of the default material design specs. Imagine not having to manually go through and re-create everything when a new control is added. Just imagine. As an example, let’s talk about the humble table cell. It’s used everywhere, in almost every app, in every OS. It has thousands of permutations and restrictions and nuances. On iOS, a top row has a slightly different appearance than a middle or a bottom row. Those stupid little hairlines…. How do you solve this? Do you make each table row transparent with a rectangle behind them all? Good luck getting that bottom row to not have 2 overlapping lines without a few too many layer overrides. Oh, you want to add another row? Ha! Do you add those hairlines by using a 1px no-blur shadow? Yeah right, the left side padding of the table row changes position depending on the implementation. Also, those aliasing issues on unshadowed edges aren’t THAT noticeable… right? Do you have a rectangle for the hairline? Have fun aligning a .5px tall element to the grid when it resizes. Oh wait, you design in 2x? What is this, 2014? Do you use a line?….. Please tell me you don’t actually use lines. *shudder* Maybe there’s a solution out there. I haven’t found it. Until Figma. All I have to do is make one component with a nested table background component, which contains my 4 states of a table row, and in each instance of the row, I can just turn on the one that makes sense. But that’s not the coolest part. After I made this bad boy, I added it to the team library, and if I ever update this root component, it’s changes will flow to EVERY INSTANCE THAT EXISTS. But wait! It will notify people in other files of the change, allow them to review those changes, and also allow it to only be updated when the time is right to do so. This is basically like GIT for my design files. Previously, with Sketch, I could get some of this functionality. But here’s the rub. Every time you create a new Sketch file, you have to bring in the symbols from elsewhere. If one file gets updated, or if you realize that one symbol isn’t quite right, there’s no way to push those changes everywhere. As a result, you’re forced to add too much to one sketch file, so that everything can stay up-to-date. There are entire teams of people at companies like AirBnB who are making tools just so that component libraries can be usable with Sketch. I just don’t have budget for that. Figma makes it so I don’t have to. I have a project which contains all of my global elements. I have one for icons. YES ALL ICONS ARE FROM THE SAME PLACE. I have one for fonts, one for iOS, one for Android. No more close enough icons. No more having to copy symbols. No more duplicate entries. No more mess. I thought Invision Craft would do this. WRONG. I bought icon jar. Yeah… no. Great for tagging and finding, no so much for updating and using. This works, and it works damn well. For the first time in 2 years, I can know that all of my icons, all of my fonts, and all of my OS controls are uniform and maintainable. No more duplicates, no more mess. I mean, check out how easy (and organized) it is to make this settings page: If that doesn’t get you pumped… well then I suppose this article isn’t for you. Reason #4: Support and Updates I’m very excited about Figma, but it’s not without it’s shortfalls. I’ve run into quite a few bugs in my weeks with the tool that range from the team library not updating, rendering issues on other machines, layers not closing when clicked, etc. But here’s the thing. I cannot think of a week in the last 2 years that I didn’t run into a Sketch bug. I’ve become accustomed to hiccups, most of which are minor. Biggest difference here? I’ve actually had them fixed. I’ve had support staff respond to my issues within an hour. Hour. With an h. On top of that, they actually been able to push updates to my problems in the same week as my request. Kudos, Figma. Jason, you’re the man. Now, I’m sure that Figma is benefitting from a smaller user base, and is able to make bigger changes more quickly. But it goes without saying that having a tool that is ALWAYS up to date is far better than seeing a fat ‘update available’ dialogue when you log in. Those days in Sketch were always exciting, terrifying, and frustrating all at once. Exciting because you get to read about all of the new updates, many of which will save tons of time. Terrifying because you know, you just KNOW, that something will be broken, and you most likely won’t know when or why or sometimes even notice before it’s too late. Frustrating because there’s no fix. Or the fix is long in coming. Or you can’t use the new shiny feature that everyone else is stoked about because it breaks too many parts of your workflow. Or that this release still hasn’t fixed that long-standing issue that you’ve had. Also, can I just give a shout-out to Intercom here? Having that as a support tool inside of an app is just killer. No need to find the right email or the right website, it’s just all seamless, and it’s something that you cannot do inside of a desktop app. Reason #5: Version History Let’s be real. This is not version control. If you have put faith in this system… you are going to get burned. I used to trust it. I don’t anymore. THIS is version control: I can see when an edit was made. I can see who made it. I can go back to it. I can fork a file from a specific point in time. I don’t need Invision, I don’t need Dropbox, this is built in. No need to say more. But… Sketch is still better at some things. For now. It’s better at integrations, dev handoff, prototyping, 3rd party tools, extensions, templates & resources, and it can all be stored locally. But none of those are deal breakers right now for me. For prototypes I already start from scratch in Principle because the Sketch import doesn’t work with symbol overrides and the structure isn’t the same. Dev handoff is my biggest concern at the moment, as I’m worried about giving the reins to people who are not familiar with the tool. Comments are not robust enough for documentation, and Zeplin really is easy to use. That being said, Zeplin it doesn’t communicate constraints, responsive layouts, object states, different screen sizes, and only shows one screen at a time. Also, I’ve read about other teams giving their devs read-only visibility, but that makes it so they can’t see colors, constraints or other information, just margins… What am I missing here? That’s not really useable, yet. p With port number 8080